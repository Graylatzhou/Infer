{
  "security.workspace.trust.untrustedFiles": "open",
  "editor.unicodeHighlight.nonBasicASCII": false,
  "remote.SSH.showLoginTerminal": true,
  "cmake.showOptionsMovedNotification": false,
  "remote.SSH.remotePlatform": {
    "172.20.10.4": "linux",
    "connect.westc.gpuhub.com": "linux",
    "172.20.10.5": "linux",
    "172.20.10.6": "linux",
    "172.20.10.9": "linux",
    "172.20.10.18": "linux",
    "region-41.seetacloud.com": "linux",
    "connect.westb.seetacloud.com": "linux",
    "connect.cqa1.seetacloud.com": "linux",
    "192.168.137.16": "linux",
    "192.168.137.182": "linux",
    "frp-hub.top": "linux",
    "region-42.seetacloud.com": "linux",
    "192.168.137.178": "linux",
    "connect.yza1.seetacloud.com": "linux",
    "192.168.137.209": "linux",
    "connect.nmb1.seetacloud.com": "linux",
    "region-9.autodl.pro": "linux",
    "192.168.137.152": "linux",
    "192.168.137.249": "linux",
    "192.168.137.51": "linux",
    "wsl": "linux",
    "62.234.220.182": "linux"
  },
  "cmake.configureOnOpen": true,
  "git.openRepositoryInParentFolders": "never",
  "github.copilot.editor.enableAutoCompletions": true,
  "cmake.pinnedCommands": [
    "workbench.action.tasks.configureTaskRunner",
    "workbench.action.tasks.runTask"
  ],
  "editor.fontSize": 20,
  "explorer.confirmDragAndDrop": false,
  "editor.largeFileOptimizations": false,
  "github.copilot.chat.scopeSelection": true,
  "github.copilot.chat.modelPicker.enabled": true,
  "github.copilot.advanced": {},
  "chatgpt.gpt3.model": "claude-3-5-sonnet-20240620",
  "deepseek.lang": "cn",
  "deepseek.apikey": "sk-534b6d9a705846d7b660aa200fc60055",
  "remote.SSH.defaultForwardedPorts": [],
  "remote.SSH.bindHost": {
    "62.234.220.182": "/home/ubuntu/zzw_odm/"
  },
  "[cuda-cpp]": {
    "breadcrumbs.showArrays": true,
    "editor.wordBasedSuggestions": "on",
    "editor.semanticHighlighting.enabled": true,
    "editor.stickyScroll.defaultModel": "foldingProviderModel",
    "editor.suggest.insertMode": "replace"
  },
  "files.associations": {
    "*.cu": "cuda-cpp",
    "__config": "cpp",
    "target": "cpp",
    "new": "cpp",
    "cstddef": "cpp",
    "array": "cpp",
    "atomic": "cpp",
    "bit": "cpp",
    "bitset": "cpp",
    "cctype": "cpp",
    "chrono": "cpp",
    "clocale": "cpp",
    "cmath": "cpp",
    "codecvt": "cpp",
    "compare": "cpp",
    "concepts": "cpp",
    "condition_variable": "cpp",
    "cstdarg": "cpp",
    "cstdint": "cpp",
    "cstdio": "cpp",
    "cstdlib": "cpp",
    "cstring": "cpp",
    "ctime": "cpp",
    "cwchar": "cpp",
    "cwctype": "cpp",
    "deque": "cpp",
    "map": "cpp",
    "set": "cpp",
    "string": "cpp",
    "unordered_map": "cpp",
    "vector": "cpp",
    "exception": "cpp",
    "algorithm": "cpp",
    "functional": "cpp",
    "iterator": "cpp",
    "memory": "cpp",
    "memory_resource": "cpp",
    "numeric": "cpp",
    "optional": "cpp",
    "random": "cpp",
    "ratio": "cpp",
    "string_view": "cpp",
    "system_error": "cpp",
    "tuple": "cpp",
    "type_traits": "cpp",
    "utility": "cpp",
    "fstream": "cpp",
    "initializer_list": "cpp",
    "iomanip": "cpp",
    "iosfwd": "cpp",
    "iostream": "cpp",
    "istream": "cpp",
    "limits": "cpp",
    "mutex": "cpp",
    "numbers": "cpp",
    "ostream": "cpp",
    "semaphore": "cpp",
    "shared_mutex": "cpp",
    "sstream": "cpp",
    "stdexcept": "cpp",
    "stop_token": "cpp",
    "streambuf": "cpp",
    "thread": "cpp",
    "cfenv": "cpp",
    "cinttypes": "cpp",
    "typeinfo": "cpp",
    "variant": "cpp",
    "__nullptr": "cpp",
    "__bit_reference": "cpp",
    "__debug": "cpp",
    "__errc": "cpp",
    "__hash_table": "cpp",
    "__locale": "cpp",
    "__mutex_base": "cpp",
    "__node_handle": "cpp",
    "__split_buffer": "cpp",
    "__threading_support": "cpp",
    "__verbose_abort": "cpp",
    "ios": "cpp",
    "locale": "cpp",
    "__functional_base": "cpp",
    "__memory": "cpp",
    "queue": "cpp"
  },
  "workbench.editorAssociations": {
    "*.copilotmd": "vscode.markdown.preview.editor",
    "*.nc": "default",
    "*.gguf": "default"
  },
  "clang.executable": "/usr/bin/clang",
  "[cpp]": {
    "editor.defaultFormatter": "ms-vscode.cpptools"
  },
  "clangd.arguments": [
    "--background-index --compile-commands-dir=${workspaceFolder} --header-insertion=never --query-driver=/usr/bin/clang++,/usr/local/cuda/bin/nvcc --all-scopes-completion"
  ],
  "workbench.settings.applyToAllProfiles": [],
  "cmake.configureSettings": {
    "CMAKE_BUILD_TYPE": "Debug",
    "CMAKE_EXPORT_COMPILE_COMMANDS": "TRUE",
    "CMAKE_C_COMPILER": "/usr/bin/gcc",
    "CMAKE_CXX_COMPILER": "/usr/bin/g++",
    "CMAKE_CUDA_COMPILER": "/usr/local/cuda/bin/nvcc",
    "CUTLASS_NVCC_ARCHS": "89",
    "CUDA_TOOLKIT_ROOT_DIR": "/usr/local/cuda",
    "DCUTLASS_ENABLE_TESTS": "OFF",
    "CUTLASS_ENABLE_EXAMPLES": "ON"
  },
  "cmake.buildArgs": [],
  "cmake.generator": "Ninja",
  "cmake.sourceDirectory": "/home/zzw/Cute-Learning/Infer",
  "cmake.buildDirectory": "${workspaceFolder}/build",
  "cmake.buildBeforeRun": true,
  "cmake.defaultVariants": {
    "buildType": {
      "default": "debug",
      "description": "Build type",
      "choices": {
        "debug": {
          "short": "Debug",
          "long": "Disable optimizations - include debug information",
          "buildType": "Debug"
        },
        "release": {
          "short": "Release",
          "long": "Optimize for speed - exclude debug information",
          "buildType": "Release"
        }
      }
    }
  },
  "cmake.parallelJobs": 8,
  "githubPullRequests.pullBranch": "never",
  "C_Cpp.inlayHints.parameterNames.enabled": true,
  "C_Cpp.intelliSenseUpdateDelay": 500,
  "C_Cpp.workspaceSymbols": "All",
  "github.copilot.nextEditSuggestions.enabled": true,
  "C_Cpp.intelliSenseEngine": "default",
  "C_Cpp_Runner.msvcBatchPath": "",
  "C_Cpp.default.includePath": [
    "${workspaceFolder}/**",
    "/usr/local/cuda/include",
    "/usr/include/cudnn",
    "/usr/local/cudnn/include"
  ],
  "C_Cpp.default.defines": [
    "__CUDACC__",
    "CUDNN_MAJOR=8"
  ],
  "C_Cpp.default.cppStandard": "c++17",
  "C_Cpp.default.intelliSenseMode": "linux-gcc-x64",
  "C_Cpp.enhancedColorization": "enabled"
  
}